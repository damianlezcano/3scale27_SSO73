apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    name: "3scale-copy-service-pipeline"
  name: "3scale-copy-service-pipeline"
spec:
  strategy:
    type: "JenkinsPipeline"
    jenkinsPipelineStrategy:
      env:
        - name: ACCESS_TOKEN_SOURCE
          value: 413bbfe4b486ee108c175b8856c043914d7e6eed934ec7271537562ef4d51879
        - name: ACCESS_TOKEN_DESTINATION
          value: c595af72f3683fc18cced67b6710abdab309bf7027dc9e0252b18b3b38383566
        - name: URL_SOURCE
          value: sume-dev-admin.3scale.apps.openshift.ase.local
        - name: URL_DESTINATION
          value: sume-test-admin.3scale.apps.openshift.ase.local
      jenkinsfile: |-
        node("3scale_toolbox") {
          stage("Select service") {
            def servIds = getServiceIds("https://${env.URL_SOURCE}/admin/api/services.xml?access_token=${env.ACCESS_TOKEN_SOURCE}").split(",")

            def INPUT_PARAMS = input message: 'Seleccione el servicio a promocionar', ok: 'Next',
            parameters: [
              choice(name: 'ID_SOURCES', choices: servIds.join('\n'), description: "Seleccione un ID de servicio origen en ${env.URL_SOURCE}"),
              string(name: 'SERVICE_NAME', defaultValue: 'None', description: "Nombre del servicio a promocionar a ${env.URL_DESTINATION}")
            ]
            env.ID_SOURCES = INPUT_PARAMS.ID_SOURCES
            env.SERVICE_NAME = INPUT_PARAMS.SERVICE_NAME
          }
          stage("Copy Service") {
              echo "All parameters have been set as Environment Variables"
              def idS = env.ID_SOURCES.split(":")[0].trim()
              echo "ID_SOURCES: ${idS}"
              echo "SERVICE_NAME: ${env.SERVICE_NAME}"
              sh "3scale copy service ${idS} --source=https://${ACCESS_TOKEN_SOURCE}@${URL_SOURCE} --destination=https://${ACCESS_TOKEN_DESTINATION}@${URL_DESTINATION} --target_system_name=${env.SERVICE_NAME} -k"
          }
        }





